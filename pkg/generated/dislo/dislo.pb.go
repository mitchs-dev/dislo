// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: dislo.proto

package dislo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Errors int32

const (
	Errors_UNKNOWN_ERROR                 Errors = 0
	Errors_LOCK_NOT_FOUND                Errors = 1
	Errors_LOCK_ALREADY_EXISTS           Errors = 2
	Errors_INTERNAL_SERVER_ERROR         Errors = 3
	Errors_NAMESPACE_NOT_FOUND           Errors = 4
	Errors_NO_LOCKS_PROVIDED             Errors = 5
	Errors_NO_CORRELATION_ID_PROVIDED    Errors = 6
	Errors_NO_INSTANCE_PROVIDED          Errors = 7
	Errors_INSTANCE_OUTSIDE_SERVER_RANGE Errors = 8
	Errors_LOCK_NAMESPACE_IS_EMPTY       Errors = 9
	Errors_LOCK_ID_IS_EMPTY              Errors = 10
	Errors_CLIENT_ID_NOT_IN_UUID_FORMAT  Errors = 11
	Errors_CLIENT_ID_IS_EMPTY            Errors = 12
	Errors_INSTANCE_IS_RESERVED          Errors = 13
)

// Enum value maps for Errors.
var (
	Errors_name = map[int32]string{
		0:  "UNKNOWN_ERROR",
		1:  "LOCK_NOT_FOUND",
		2:  "LOCK_ALREADY_EXISTS",
		3:  "INTERNAL_SERVER_ERROR",
		4:  "NAMESPACE_NOT_FOUND",
		5:  "NO_LOCKS_PROVIDED",
		6:  "NO_CORRELATION_ID_PROVIDED",
		7:  "NO_INSTANCE_PROVIDED",
		8:  "INSTANCE_OUTSIDE_SERVER_RANGE",
		9:  "LOCK_NAMESPACE_IS_EMPTY",
		10: "LOCK_ID_IS_EMPTY",
		11: "CLIENT_ID_NOT_IN_UUID_FORMAT",
		12: "CLIENT_ID_IS_EMPTY",
		13: "INSTANCE_IS_RESERVED",
	}
	Errors_value = map[string]int32{
		"UNKNOWN_ERROR":                 0,
		"LOCK_NOT_FOUND":                1,
		"LOCK_ALREADY_EXISTS":           2,
		"INTERNAL_SERVER_ERROR":         3,
		"NAMESPACE_NOT_FOUND":           4,
		"NO_LOCKS_PROVIDED":             5,
		"NO_CORRELATION_ID_PROVIDED":    6,
		"NO_INSTANCE_PROVIDED":          7,
		"INSTANCE_OUTSIDE_SERVER_RANGE": 8,
		"LOCK_NAMESPACE_IS_EMPTY":       9,
		"LOCK_ID_IS_EMPTY":              10,
		"CLIENT_ID_NOT_IN_UUID_FORMAT":  11,
		"CLIENT_ID_IS_EMPTY":            12,
		"INSTANCE_IS_RESERVED":          13,
	}
)

func (x Errors) Enum() *Errors {
	p := new(Errors)
	*p = x
	return p
}

func (x Errors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Errors) Descriptor() protoreflect.EnumDescriptor {
	return file_dislo_proto_enumTypes[0].Descriptor()
}

func (Errors) Type() protoreflect.EnumType {
	return &file_dislo_proto_enumTypes[0]
}

func (x Errors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Errors.Descriptor instead.
func (Errors) EnumDescriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{0}
}

type LockStatus int32

const (
	LockStatus_UNKNOWN_STATUS   LockStatus = 0
	LockStatus_LOCKED           LockStatus = 1
	LockStatus_UNLOCKED         LockStatus = 2
	LockStatus_PENDING_DELETION LockStatus = 3
	LockStatus_PENDING_CREATION LockStatus = 4
)

// Enum value maps for LockStatus.
var (
	LockStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "LOCKED",
		2: "UNLOCKED",
		3: "PENDING_DELETION",
		4: "PENDING_CREATION",
	}
	LockStatus_value = map[string]int32{
		"UNKNOWN_STATUS":   0,
		"LOCKED":           1,
		"UNLOCKED":         2,
		"PENDING_DELETION": 3,
		"PENDING_CREATION": 4,
	}
)

func (x LockStatus) Enum() *LockStatus {
	p := new(LockStatus)
	*p = x
	return p
}

func (x LockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dislo_proto_enumTypes[1].Descriptor()
}

func (LockStatus) Type() protoreflect.EnumType {
	return &file_dislo_proto_enumTypes[1]
}

func (x LockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockStatus.Descriptor instead.
func (LockStatus) EnumDescriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{1}
}

type Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Label) Reset() {
	*x = Label{}
	mi := &file_dislo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_dislo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{0}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Lock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        LockStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=dislo.LockStatus" json:"status,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels        []*Label               `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lock) Reset() {
	*x = Lock{}
	mi := &file_dislo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_dislo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lock.ProtoReflect.Descriptor instead.
func (*Lock) Descriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{1}
}

func (x *Lock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lock) GetStatus() LockStatus {
	if x != nil {
		return x.Status
	}
	return LockStatus_UNKNOWN_STATUS
}

func (x *Lock) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Lock) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locks         []*Lock                `protobuf:"bytes,1,rep,name=locks,proto3" json:"locks,omitempty"`                                      // List of locks to be processed
	Lock          bool                   `protobuf:"varint,2,opt,name=lock,proto3" json:"lock,omitempty"`                                       // To lock or unlock
	Instance      int32                  `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`                               // Instance within Dislo (0-9; Default: 0)
	CorrelationId string                 `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"` // Correlation ID for tracking
	ClientId      string                 `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                // Client ID for tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_dislo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_dislo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetLocks() []*Lock {
	if x != nil {
		return x.Locks
	}
	return nil
}

func (x *Request) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *Request) GetInstance() int32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *Request) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *Request) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         Errors                 `protobuf:"varint,1,opt,name=error,proto3,enum=dislo.Errors" json:"error,omitempty"`                    // Error code
	Locks         []*Lock                `protobuf:"bytes,2,rep,name=locks,proto3" json:"locks,omitempty"`                                       // List of locks returned
	QueuePosition int32                  `protobuf:"varint,3,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"` // Position in the queue for the lock
	CorrelationId string                 `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`  // Correlation ID for tracking
	FailedOnLock  string                 `protobuf:"bytes,5,opt,name=failed_on_lock,json=failedOnLock,proto3" json:"failed_on_lock,omitempty"`   // Lock that failed the request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_dislo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_dislo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_dislo_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetError() Errors {
	if x != nil {
		return x.Error
	}
	return Errors_UNKNOWN_ERROR
}

func (x *Response) GetLocks() []*Lock {
	if x != nil {
		return x.Locks
	}
	return nil
}

func (x *Response) GetQueuePosition() int32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *Response) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *Response) GetFailedOnLock() string {
	if x != nil {
		return x.FailedOnLock
	}
	return ""
}

var File_dislo_proto protoreflect.FileDescriptor

var file_dislo_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64,
	0x69, 0x73, 0x6c, 0x6f, 0x22, 0x2f, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xa0, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xc6, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64,
	0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x6e,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x4f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x2a, 0xf7, 0x02, 0x0a, 0x06, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c,
	0x4f, 0x43, 0x4b, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12,
	0x17, 0x0a, 0x13, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x10, 0x06, 0x12,
	0x18, 0x0a, 0x14, 0x4e, 0x4f, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x44, 0x10, 0x07, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49,
	0x53, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x43,
	0x4b, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x53, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x0a, 0x12,
	0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10,
	0x0b, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x49,
	0x53, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x44, 0x10, 0x0d, 0x2a, 0x66, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x32, 0x85, 0x02, 0x0a, 0x05,
	0x44, 0x69, 0x73, 0x6c, 0x6f, 0x12, 0x27, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x2e,
	0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e,
	0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x6c,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x6c,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2f, 0x64, 0x69, 0x73, 0x6c, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_dislo_proto_rawDescOnce sync.Once
	file_dislo_proto_rawDescData []byte
)

func file_dislo_proto_rawDescGZIP() []byte {
	file_dislo_proto_rawDescOnce.Do(func() {
		file_dislo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dislo_proto_rawDesc), len(file_dislo_proto_rawDesc)))
	})
	return file_dislo_proto_rawDescData
}

var file_dislo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dislo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_dislo_proto_goTypes = []any{
	(Errors)(0),      // 0: dislo.Errors
	(LockStatus)(0),  // 1: dislo.LockStatus
	(*Label)(nil),    // 2: dislo.Label
	(*Lock)(nil),     // 3: dislo.Lock
	(*Request)(nil),  // 4: dislo.Request
	(*Response)(nil), // 5: dislo.Response
}
var file_dislo_proto_depIdxs = []int32{
	1,  // 0: dislo.Lock.status:type_name -> dislo.LockStatus
	2,  // 1: dislo.Lock.labels:type_name -> dislo.Label
	3,  // 2: dislo.Request.locks:type_name -> dislo.Lock
	0,  // 3: dislo.Response.error:type_name -> dislo.Errors
	3,  // 4: dislo.Response.locks:type_name -> dislo.Lock
	4,  // 5: dislo.Dislo.Lock:input_type -> dislo.Request
	4,  // 6: dislo.Dislo.Unlock:input_type -> dislo.Request
	4,  // 7: dislo.Dislo.Create:input_type -> dislo.Request
	4,  // 8: dislo.Dislo.Delete:input_type -> dislo.Request
	4,  // 9: dislo.Dislo.Status:input_type -> dislo.Request
	4,  // 10: dislo.Dislo.List:input_type -> dislo.Request
	5,  // 11: dislo.Dislo.Lock:output_type -> dislo.Response
	5,  // 12: dislo.Dislo.Unlock:output_type -> dislo.Response
	5,  // 13: dislo.Dislo.Create:output_type -> dislo.Response
	5,  // 14: dislo.Dislo.Delete:output_type -> dislo.Response
	5,  // 15: dislo.Dislo.Status:output_type -> dislo.Response
	5,  // 16: dislo.Dislo.List:output_type -> dislo.Response
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_dislo_proto_init() }
func file_dislo_proto_init() {
	if File_dislo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dislo_proto_rawDesc), len(file_dislo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dislo_proto_goTypes,
		DependencyIndexes: file_dislo_proto_depIdxs,
		EnumInfos:         file_dislo_proto_enumTypes,
		MessageInfos:      file_dislo_proto_msgTypes,
	}.Build()
	File_dislo_proto = out.File
	file_dislo_proto_goTypes = nil
	file_dislo_proto_depIdxs = nil
}
